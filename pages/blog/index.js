// components
import Head from 'next/head';
// -- custom
import HeroImage from '../../components/HeroImage/HeroImage';
import DecoratedHeading from '../../components/DecoratedHeading/DecoratedHeading';
import ArticlePreview from '../../components/ArticlePreview/ArticlePreview';

// styles
import styles from '../../styles/pages/Blog.module.scss';

// constants
import { STRAPI_URL } from '../../constants';
import { GET_ARTICLES_BY_NEWEST_FIRST } from '../../graphql/queries';

export default function Blog({ latestArticles, restOfArticles }) {
  const renderArticlePreviews = (articles) => {
    return articles.map((article) => {
      const { title, description, slug } = article.attributes;

      return (
        <ArticlePreview
          key={article.id}
          title={title}
          description={description}
          slug={slug}
        />
      );
    });
  };

  return (
    <>
      <Head>
        <title>Blog | FreeRoam</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <HeroImage title="Blog" imageUrl="/blog-header.jpg" />

      <main className={styles.blog}>
        {/* 3 Latest Articles */}
        <section className={styles['latest-articles']}>
          <DecoratedHeading level="2" text="Latest Articles" />
          <div className={styles['articles-list']}>
            {renderArticlePreviews(latestArticles)}
          </div>
        </section>

        {/* Rest of articles */}
        <section className={styles['other-articles']}>
          <DecoratedHeading level="2" text="Other Articles" />

          <div className={styles['articles-list']}>
            {renderArticlePreviews(restOfArticles)}
          </div>
        </section>
      </main>
    </>
  );
}

export async function getStaticProps() {
  // Fetch all articles, sorted by creation date in descending order
  // i.e. with the newest article appearing first in the array; and the oldest appearing last
  const fetchOptions = {
    method: 'POST',
    headers: {
      'content-type': 'application/json',
    },
    body: JSON.stringify({
      query: GET_ARTICLES_BY_NEWEST_FIRST,
    }),
  };
  const response = await fetch(`${STRAPI_URL}/graphql`, fetchOptions);
  const result = await response.json();

  /**
   * strapi returns object (result) with a data property
   * data property -> contains all requested data (e.g. all entries in a single collection-type)
   
   * NOTE: strapi response object has specific structure
   * --- Array of entries ---
   * result.data.articles is an object
   * result.data.articles.data is an array of articles
   * --- Single entry from an array of entries ---
   * result.data.articles.data[0].id
   * result.data.articles.data[0].attributes.title
   * result.data.articles.data[0].attributes.content
   
   * --- Props Passed to Home Page ---
   * Articles is an array of objects (each representing an article)
   * Each article has 'id' and 'attributes' property
   * Properties/fields of articles (defined in Strapi) are found under 'attributes' object
   */
  const { articles } = result.data;

  // Get array of the 3 latest articles
  const latestArticles = articles.data.splice(0, 3);

  return {
    props: {
      // array of the 3 latest articles
      latestArticles,
      // rest of articles after splicing the array of all articles
      restOfArticles: articles.data,
    },
  };
}
